{
	"info": {
		"_postman_id": "ed293334-71a0-454f-baec-119fa1c05da0",
		"name": "Resreq.in",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "List Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"List user returns all the users\", function () {",
									"    pm.expect(jsonData.total).to.eql(12);",
									"});",
									"",
									"pm.test(\"List user returns an array of users\", function(){",
									"    pm.expect(jsonData.data).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URI}}/api/users/",
							"host": [
								"{{BASE_URI}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": [
						{
							"name": "List Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URI}}/api/users/",
									"host": [
										"{{BASE_URI}}"
									],
									"path": [
										"api",
										"users",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 13 Mar 2021 18:24:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Etag",
									"value": "W/\"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8\""
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								},
								{
									"key": "Cache-Control",
									"value": "max-age=14400"
								},
								{
									"key": "CF-Cache-Status",
									"value": "HIT"
								},
								{
									"key": "Age",
									"value": "324"
								},
								{
									"key": "cf-request-id",
									"value": "08ce6dcd11000017bb3abd0000000001"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"cf-nel\",\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report?s=1VTmB252zhpchTiUcSLGVTjQHJiyi4SIIPqltGYRf0XgkFyDnYEgh5rdTIn3TEpN3yHDiQCUNdxxcF4B0go8%2FGL3kKb5AXg3bkM%3D\"}],\"max_age\":604800}"
								},
								{
									"key": "NEL",
									"value": "{\"report_to\":\"cf-nel\",\"max_age\":604800}"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "62f74bf4e91b17bb-SIN"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "alt-svc",
									"value": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"page\": 1,\n    \"per_page\": 6,\n    \"total\": 12,\n    \"total_pages\": 2,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"email\": \"george.bluth@reqres.in\",\n            \"first_name\": \"George\",\n            \"last_name\": \"Bluth\",\n            \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\n        },\n        {\n            \"id\": 2,\n            \"email\": \"janet.weaver@reqres.in\",\n            \"first_name\": \"Janet\",\n            \"last_name\": \"Weaver\",\n            \"avatar\": \"https://reqres.in/img/faces/2-image.jpg\"\n        },\n        {\n            \"id\": 3,\n            \"email\": \"emma.wong@reqres.in\",\n            \"first_name\": \"Emma\",\n            \"last_name\": \"Wong\",\n            \"avatar\": \"https://reqres.in/img/faces/3-image.jpg\"\n        },\n        {\n            \"id\": 4,\n            \"email\": \"eve.holt@reqres.in\",\n            \"first_name\": \"Eve\",\n            \"last_name\": \"Holt\",\n            \"avatar\": \"https://reqres.in/img/faces/4-image.jpg\"\n        },\n        {\n            \"id\": 5,\n            \"email\": \"charles.morris@reqres.in\",\n            \"first_name\": \"Charles\",\n            \"last_name\": \"Morris\",\n            \"avatar\": \"https://reqres.in/img/faces/5-image.jpg\"\n        },\n        {\n            \"id\": 6,\n            \"email\": \"tracey.ramos@reqres.in\",\n            \"first_name\": \"Tracey\",\n            \"last_name\": \"Ramos\",\n            \"avatar\": \"https://reqres.in/img/faces/6-image.jpg\"\n        }\n    ],\n    \"support\": {\n        \"url\": \"https://reqres.in/#support-heading\",\n        \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get single user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Get user returns the user with the same id\", function () {",
									"    pm.expect(jsonData.data.id).to.eql(1);",
									"});",
									"",
									"pm.test(\"Get user returns an avatar of the user\", function () {",
									"    pm.expect(jsonData.data.avatar).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URI}}/api/users/1",
							"host": [
								"{{BASE_URI}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create user returns a status code 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URI}}/api/users",
							"host": [
								"{{BASE_URI}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update existing user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update user returns a response with name, job and updatedAt fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys('name', 'job', 'updatedAt');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URI}}/api/user/2",
							"host": [
								"{{BASE_URI}}"
							],
							"path": [
								"api",
								"user",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete user returns a status code 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URI}}/api/users/1",
							"host": [
								"{{BASE_URI}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}